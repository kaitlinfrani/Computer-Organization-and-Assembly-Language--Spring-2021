     1                                  ;Kaitlin Frani
     2                                  ;CPSC240-5 Test 1
     3                                  
     4                                  ;===========================Declarations===================================================================
     5                                  extern printf
     6                                  extern scanf
     7                                  global electric_resistance ;will use the function from electricity.cpp file
     8                                  
     9                                  segment .data
    10 00000000 506C6561736520656E-     input db "Please enter the resistance numbers of the two subcircuits separated by ws and press enter.",10, 0
    10 00000009 746572207468652072-
    10 00000012 6573697374616E6365-
    10 0000001B 206E756D6265727320-
    10 00000024 6F6620746865207477-
    10 0000002D 6F2073756263697263-
    10 00000036 756974732073657061-
    10 0000003F 726174656420627920-
    10 00000048 777320616E64207072-
    10 00000051 65737320656E746572-
    10 0000005A 2E0A00             
    11 0000005D 256C66256C66256C66-     input_three db "%lf%lf%lf",0
    11 00000066 00                 
    12 00000067 546865736520726573-     received db "These resistances were received: %lf 立 %lf 立 %lf 立", 10, 0
    12 00000070 697374616E63657320-
    12 00000079 776572652072656365-
    12 00000082 697665643A20256C66-
    12 0000008B 20CEA920256C6620CE-
    12 00000094 A920256C6620CEA90A-
    12 0000009D 00                 
    13 0000009E 546865207265736973-     output_resistance db "The resistance of the entire circuit is %lf 立", 10, 0
    13 000000A7 74616E6365206F6620-
    13 000000B0 74686520656E746972-
    13 000000B9 652063697263756974-
    13 000000C2 20697320256C6620CE-
    13 000000CB A90A00             
    14 000000CE 54686520746F74616C-     return db "The total resistance will be returned to the caller module.", 10, 0
    14 000000D7 20726573697374616E-
    14 000000E0 63652077696C6C2062-
    14 000000E9 652072657475726E65-
    14 000000F2 6420746F2074686520-
    14 000000FB 63616C6C6572206D6F-
    14 00000104 64756C652E0A00     
    15                                  
    16                                  segment .bss
    17                                  
    18                                  segment .text
    19                                  
    20                                  electric_resistance: ;name of global function
    21                                  ;============================================================================================================
    22                                  
    23                                  ;======Backing up all registers + setting stack pointer to base pointer=========================================
    24 00000000 55                      push rbp
    25 00000001 4889E5                  mov rbp,rsp
    26 00000004 57                      push rdi
    27 00000005 56                      push rsi
    28 00000006 52                      push rdx
    29 00000007 51                      push rcx
    30 00000008 4150                    push r8
    31 0000000A 4151                    push r9
    32 0000000C 4152                    push r10
    33 0000000E 4153                    push r11
    34 00000010 4154                    push r12
    35 00000012 4155                    push r13
    36 00000014 4156                    push r14
    37 00000016 4157                    push r15
    38 00000018 53                      push rbx
    39 00000019 9C                      pushf
    40                                  ;======End of backing up registers=================================================================================
    41                                  
    42                                  ;======Begin section to input resistance numbers======================================================================
    43                                  ;Begin resistance numbers printf block
    44 0000001A 6A63                    push qword 99
    45 0000001C B800000000              mov rax, 0
    46 00000021 48BF-                   mov rdi, input     ;"Please enter the resistance numbers of the two subcircuits separated by ws and press enter.",10,0
    46 00000023 [0000000000000000] 
    47 0000002B E8(00000000)            call printf
    48 00000030 58                      pop rax
    49                                  ;End of resistance numbers block
    50                                  
    51 00000031 6A63                    push qword 99 ;used to get on the boundary
    52                                  ;Begin enter three numbers scanf block
    53 00000033 6AFF                    push qword -1
    54 00000035 6AFE                    push qword -2
    55 00000037 6AFD                    push qword -3
    56 00000039 B800000000              mov rax, 0
    57 0000003E 48BF-                   mov rdi, input_three     ;takes in resistance numbers input
    57 00000040 [5D00000000000000] 
    58 00000048 4889E6                  mov rsi, rsp
    59 0000004B 4889E2                  mov rdx, rsp
    60 0000004E 4883C208                add rdx, 8
    61 00000052 4889E1                  mov rcx, rsp
    62 00000055 4883C110                add rcx, 16
    63 00000059 E8(00000000)            call scanf
    64 0000005E F2440F101424            movsd xmm10, [rsp]
    65 00000064 F2440F105C2408          movsd xmm11, [rsp+8]
    66 0000006B F2440F10642410          movsd xmm12, [rsp+16]
    67 00000072 58                      pop rax
    68 00000073 58                      pop rax
    69 00000074 58                      pop rax
    70                                  ;End of enter numbers scanf block
    71                                  ;======End of section to input resistance numbers=======================================================================
    72                                  
    73                                  ;======Begin section of Displaying Numbers=========================================================================
    74 00000075 6A00                    push qword 0
    75 00000077 B803000000              mov rax, 3
    76 0000007C 48BF-                   mov rdi, received ;"These resistances were received: "
    76 0000007E [6700000000000000] 
    77 00000086 F2410F10C2              movsd xmm0, xmm10
    78 0000008B F2410F10CB              movsd xmm1, xmm11
    79 00000090 F2410F10D4              movsd xmm2, xmm12
    80 00000095 E8(00000000)            call printf
    81 0000009A 58                      pop rax
    82                                  ;======End of Displaying Numbers=======================================================================
    83                                  
    84                                  
    85                                  ;======Begin section of electric_resistance Calculation=========================================================================
    86                                  ;Calculate resistance
    87                                  ;1/xmm10 + 1/ xmm11 + 1/xmm12
    88                                  ;put answer into xmm13
    89                                  ;1/xmm13
    90                                  
    91                                  ;first value (1/xmm10)
    92 0000009B 41B801000000            mov r8, 1 ;putting integer 1 into r8
    93 000000A1 F24D0F2AC0              cvtsi2sd xmm8, r8 ;converting r8 into a float value by storing into xmm8
    94 000000A6 F2410F10C2              movsd xmm0, xmm10 ;move first value into xmm0
    95 000000AB F2440F5EC0              divsd xmm8, xmm0  ;divide 1 with first value and put into xmm8
    96 000000B0 F2450F10E8              movsd xmm13, xmm8 ;move answer in xmm8 to xmm13, will add values in xmm13 later
    97                                  
    98                                  ;second value (1/xmm11)
    99 000000B5 41B901000000            mov r9, 1; putting integer 1 into r9
   100 000000BB F24D0F2AC9              cvtsi2sd xmm9, r9 ;converting r9 to float by storing into xmm8
   101 000000C0 F2410F10CB              movsd xmm1, xmm11 ;move second value into xmm1
   102 000000C5 F2440F5EC9              divsd xmm9, xmm1 ;divide 1 with second value and put into xmm9
   103 000000CA F2450F10F1              movsd xmm14, xmm9 ;move answer in xmm9 to xmm14
   104                                  
   105                                  ;third value (1/xmm12) and adding what we got from xmm13, xmm14
   106 000000CF 41BA01000000            mov r10, 1; putting integer 1 into r10
   107 000000D5 F2490F2AFA              cvtsi2sd xmm7, r10  ;converting r10 to float and storing into xmm6
   108 000000DA F2410F10D4              movsd xmm2, xmm12 ;move second value into xmm2
   109 000000DF F20F5EFA                divsd xmm7, xmm2 ;divide 1 with second value and put into xmm7
   110 000000E3 F2440F10FF              movsd xmm15, xmm7 ;move answer in xmm7 to xmm15
   111 000000E8 F2450F58EE              addsd xmm13, xmm14  ;adding xmm14 value to xmm13
   112 000000ED F2450F58EF              addsd xmm13, xmm15  ;adding xmm15 value to xmm13
   113                                  
   114                                  ;dividing all (1/xmm13)
   115 000000F2 41BB01000000            mov r11, 1  ;putting integer 1 into r11
   116 000000F8 F2490F2AF3              cvtsi2sd xmm6, r11  ;converting r11 to float and storing into xmm6
   117 000000FD F2410F5EF5              divsd xmm6, xmm13 ;do 1 divided by sum of values that are in 13
   118 00000102 F2440F10EE              movsd xmm13, xmm6 ;put divided answer into xmm13
   119                                  
   120                                  ;Total resistance message
   121 00000107 6A00                    push qword 0
   122 00000109 B801000000              mov rax, 1                    ; outputs one floating number (total resistance)
   123 0000010E 48BF-                   mov rdi, output_resistance    ; "The resistance of the circuit is: "
   123 00000110 [9E00000000000000] 
   124 00000118 F2410F10C5              movsd xmm0, xmm13
   125 0000011D E8(00000000)            call printf
   126 00000122 58                      pop rax
   127                                  ;======End of Resistance Calculation====================================================================================
   128                                  
   129                                  ;======Begin ending messages before exiting program===========================================================================
   130                                  ;display return message
   131                                  ;push qword 0
   132 00000123 B800000000              mov rax, 0
   133 00000128 48BF-                   mov rdi, return                  ;"The total resistance will be returned to the caller module."
   133 0000012A [CE00000000000000] 
   134 00000132 E8(00000000)            call printf
   135 00000137 58                      pop rax
   136                                  
   137 00000138 F2410F10C5              movsd xmm0, xmm13              ;grabs total resistance in xmm13, returns it to driver file
   138                                  ;======End of ending message before exiting program=================================================================================================================
   139                                  
   140                                  ;======Restoring all registers to their original values=================================================================
   141 0000013D 9D                      popf
   142 0000013E 5B                      pop rbx
   143 0000013F 415F                    pop r15
   144 00000141 415E                    pop r14
   145 00000143 415D                    pop r13
   146 00000145 415C                    pop r12
   147 00000147 415B                    pop r11
   148 00000149 415A                    pop r10
   149 0000014B 4159                    pop r9
   150 0000014D 4158                    pop r8
   151 0000014F 59                      pop rcx
   152 00000150 5A                      pop rdx
   153 00000151 5E                      pop rsi
   154 00000152 5F                      pop rdi
   155 00000153 5D                      pop rbp
   156                                  
   157 00000154 C3                      ret
   158                                  
   159                                  ;=======================================================================================================================
